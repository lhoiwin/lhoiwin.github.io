(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{365:function(a,n,s){"use strict";s.r(n);var r=s(10),t=Object(r.a)({},(function(){var a=this,n=a.$createElement,s=a._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"taro-1-4和2-0-同时并存同时开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#taro-1-4和2-0-同时并存同时开发"}},[a._v("#")]),a._v(" Taro 1.4和2.0 同时并存同时开发")]),a._v(" "),s("p",[a._v("Taro， 京东大厂出品，多端统一开发。")]),a._v(" "),s("p",[a._v("公司的旧项目是用 Taro 1.3的版本，但是新项目计划用 Taro 2.0的版本。\n而 Taro项目的编译和打包都需要全局安装 Taro 包。\n这时候想要维护旧项目同时开发新项目就尴尬，不能同一个台电脑开发呢？比较npm不能安装不同版本的全局包。\n本来以为没有办法同时开发两个版本的Taro，突然发现 yarn 的全局包安装方式和 npm 的不一样。")]),a._v(" "),s("h3",{attrs:{id:"yarn-和-npm-全局包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yarn-和-npm-全局包"}},[a._v("#")]),a._v(" yarn  和 npm 全局包")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("yarn global add package\n\nnpm install -g package\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("yarn 安装的全局包和 npm 不一样的")]),a._v(" "),s("p",[s("strong",[a._v("不像 npm 里的 —global 标志，global 是一个必须跟在 yarn 后面的命令。 输入 yarn add global package-name 会把名为 global 和 package-name 的包添加到本地，而非全局添加 package-name")])]),a._v(" "),s("p",[a._v("yarn global只是把package安装在本地，但项目却可以像全局包一样使用，这样也可以减少项目的更新对全局依赖的影响。但也可以通过prefix装包装到系统全局，就跟npm一样了。")]),a._v(" "),s("h3",{attrs:{id:"过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[a._v("#")]),a._v(" 过程")]),a._v(" "),s("p",[a._v("先 npm 全局安装 taro 1.3 ，并且初始化项目")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm install -g @tarojs/cli@1.3.34\ntaro init myApp\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("然后 用yarn 创建一个项目，在那个项目安装 局部的 Taro2.0包 ，再用项目的包 Taro 来创建 Taro2.0 的项目")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("yarn init -y\nyarn add @tarojs/cli\nyarn taro init myApp2 // 注意是在项目里面用yarn来使用项目的包\ncd myApp2\nyarn global add @tarojs/cli // 这里全局安装taro2.0的包\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("这样在1.3版本就使用npm命令来运行编译和打包的命令，在2.0版本就使用yarn命令来。")])])}),[],!1,null,null,null);n.default=t.exports}}]);