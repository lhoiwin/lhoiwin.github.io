(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{358:function(n,t,a){"use strict";a.r(t);var s=a(10),r=Object(s.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"mysql中myisam与innodb区别及选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql中myisam与innodb区别及选择"}},[n._v("#")]),n._v(" MySQL中MyISAM与InnoDB区别及选择")]),n._v(" "),a("h3",{attrs:{id:"innodb："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#innodb："}},[n._v("#")]),n._v(" InnoDB：")]),n._v(" "),a("p",[n._v("支持事务处理等\n不加锁读取\n支持外键\n支持行锁\n不支持FULLTEXT类型的索引\n不保存表的具体行数，扫描表来计算有多少行\nDELETE 表时，是一行一行的删除\nInnoDB 把数据和索引存放在表空间里面\n跨平台可直接拷贝使用\nInnoDB中必须包含AUTO_INCREMENT类型字段的索引\n表格很难被压缩")]),n._v(" "),a("h3",{attrs:{id:"myisam："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#myisam："}},[n._v("#")]),n._v(" MyISAM：")]),n._v(" "),a("p",[n._v("不支持事务，回滚将造成不完全回滚，不具有原子性\n不支持外键\n不支持外键\n支持全文搜索\n保存表的具体行数,不带where时，直接返回保存的行数\nDELETE 表时，先drop表，然后重建表\nMyISAM 表被存放在三个文件 。frm 文件存放表格定义。 数据文件是MYD (MYData) 。 索引文件是MYI (MYIndex)引伸\n跨平台很难直接拷贝\nMyISAM中可以使AUTO_INCREMENT类型字段建立联合索引\n表格可以被压缩")]),n._v(" "),a("h3",{attrs:{id:"选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择"}},[n._v("#")]),n._v(" 选择")]),n._v(" "),a("p",[n._v("因为MyISAM相对简单所以在效率上要优于InnoDB.如果系统读多，写少。对原子性要求低。那么MyISAM最好的选择。且MyISAM恢复速度快。可直接用备份覆盖恢复。如果系统读少，写多的时候，尤其是并发写入高的时候。InnoDB就是首选了。两种类型都有自己优缺点，选择那个完全要看自己的实际类弄。")])])}),[],!1,null,null,null);t.default=r.exports}}]);